{"slots":{"0":{"name":"slot1","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"Screen.setCenteredText(\"ok\")","filter":{"args":[{"value":"Raffinage"},{"value":""}],"signature":"receive(channel,message)","slotKey":"1"},"key":"0"},{"code":"Screen.clear()","filter":{"args":[],"signature":"stop()","slotKey":"-2"},"key":"1"},{"code":"---DEFINE GLOBAL VARIABLE\nScreen = nil\nEmitter = nil\nData = nil\nfontSize = 2 --export\ntableName = \"Metallurgie\" --export\n----------------\n\n---JSON FUNCTION\njson = require(\"dkjson\")\n\nfunction DecodeJson(data)\n    local obj, pos, err = json.decode(data, 1, nil)\n    if err then\n        system.print (\"Error:\", err)\n        return nil\n    end\n    return obj\nend\n\nfunction EncodeJson(data)\n    return json.encode (data, { indent = true })\nend\n\nfunction ReadData(key)\n    if Data then\n    \treturn DecodeJson(Data.getStringValue(key))\n    else\n        return nil\n    end\nend\n\nfunction SaveData(key,data)\n    if Data then\n    \tData.setStringValue(key,EncodeJson(data))\n    end\nend\n-------------\n\n---FIND SLOT TYPE\nslotsName = { M1Name, M2Name, M3Name, M4Name, M5Name, M6Name, M7Name, M8Name, M9Name }\nslots = { slot1, slot2, slot3, slot4, slot5, slot6, slot7, slot8, slot9, slot10 }\nmachines = {}\n\nfor i = 1,10\ndo\n    if slots[i] then\n        if slots[i].getElementClass() == \"ScreenUnit\" then\n            Screen = slots[i]\n        elseif slots[i].getElementClass() == \"EmitterUnit\" then\n            Emitter = slots[i]\n        elseif slots[i].getElementClass() == \"DataBankUnit\" then\n            Data = slots[i]\n\t   else\n            machines[#machines+1] = slots[i]\n        end\n    end\nend\n------------","filter":{"args":[],"signature":"start()","slotKey":"-2"},"key":"2"},{"code":"local keys = DecodeJson(Data.getKeys())\n\nlocal style = \"<style>th { font-size: \"..fontSize..\"em; text-align: left; vertical-align: middle; border-bottom: 3px solid #ddd; }</style>\"\nlocal html = style..\"<p style='font-size: \"..fontSize..\"em; text-align: center; margin-top: 15px; margin-bottom: 15px;'>\"..tableName..\"</p><table width=100%>\"\n\nfor i = 1, #keys do\n    local data = ReadData(keys[i])\n    for i2 = 1, #data.name do\n        html = html..\"<tr><th>\"..data.name[i2]..\"</th><th>\"..data.state[i2]..\"</th></tr>\"\n    end\nend\n\nhtml = html..\"</table>\"\n\nif Screen then\n\tScreen.setHTML(html)\n    end","filter":{"args":[],"signature":"update()","slotKey":"-2"},"key":"3"}],"methods":[],"events":[]}
